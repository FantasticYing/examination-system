<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.jlu.examsystem.database.mapper.ExamRecordMapper">
    <resultMap id="BaseResultMap" type="cn.edu.jlu.examsystem.database.entity.ExamRecordEntity">
        <!--@mbg.generated-->
        <!--@Table exam_record-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="exam_plan_id" jdbcType="BIGINT" property="examPlanId"/>
        <result column="paper_id" jdbcType="BIGINT" property="paperId"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="student_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="fact_score" jdbcType="INTEGER" property="factScore"/>
        <result column="content_json" jdbcType="LONGVARCHAR" property="contentJson"/>
        <result column="fact_score_detail_json" jdbcType="VARCHAR" property="factScoreDetailJson"/>
        <result column="release_status_id" jdbcType="TINYINT" property="releaseStatusId"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, exam_plan_id, student_id,paper_id, student_name, fact_score, content_json,fact_score_detail_json,
        release_status_id, created_time, updated_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from exam_record
        where id = #{id,jdbcType=BIGINT}
    </select>
    <insert id="insertIfNotExist" keyColumn="id" keyProperty="id"
            parameterType="cn.edu.jlu.examsystem.database.entity.ExamRecordEntity" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert IGNORE into exam_record (exam_plan_id,
        paper_id,
        student_id,
        student_name,
        content_json)
        values (#{examPlanId,jdbcType=BIGINT},
        #{paperId,jdbcType=BIGINT},
        #{studentId,jdbcType=BIGINT},
        #{studentName,jdbcType=VARCHAR},
        #{contentJson,jdbcType=LONGVARCHAR})
        <!--                on duplicate key-->
        <!--                update-->
        <!--        <if test="factScore != null">-->
        <!--            fact_score = #{factScore,jdbcType=INTEGER},-->
        <!--        </if>-->
        <!--        <if test="contentJson != null">-->
        <!--            content_json = #{contentJson,jdbcType=LONGVARCHAR},-->
        <!--        </if>-->
        <!--        <if test="releaseStatusId != null">-->
        <!--            release_status_id = #{releaseStatusId,jdbcType=TINYINT}-->
        <!--        </if>-->
    </insert>
    <update id="updateByExamPlanIdAndStudentIdSelective"
            parameterType="cn.edu.jlu.examsystem.database.entity.ExamRecordEntity">
        <!--@mbg.generated-->
        update exam_record
        <set>
            <if test="factScore != null">
                fact_score = #{factScore,jdbcType=INTEGER},
            </if>
            <if test="contentJson != null">
                content_json = #{contentJson,jdbcType=LONGVARCHAR},
            </if>
            <if test="releaseStatusId != null">
                release_status_id = #{releaseStatusId,jdbcType=TINYINT},
            </if>
            <if test="factScoreDetailJson != null">
                fact_score_detail_json = #{factScoreDetailJson,jdbcType=VARCHAR},
            </if>
        </set>
        where exam_plan_id = #{examPlanId,jdbcType=BIGINT}
        and student_id = #{studentId,jdbcType=BIGINT}
    </update>

    <!--auto generated by MybatisCodeHelper on 2020-09-18-->
    <select id="selectByExamPlanIdAndStudentId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from exam_record
        where exam_plan_id = #{examPlanId,jdbcType=BIGINT}
        and student_id = #{studentId,jdbcType=BIGINT}
    </select>

    <!--auto generated by MybatisCodeHelper on 2020-09-18-->
    <select id="selectByTeacherId" resultMap="BaseResultMap">
        select record.id,
               record.exam_plan_id,
               record.student_id,
               record.paper_id,
               record.student_name,
               record.fact_score,
               record.content_json,
               fact_score_detail_json,
               release_status_id,
               record.created_time,
               record.updated_time,
               p.title
        from exam_plan plan
                     inner join course_relation relation on plan.course_id = relation.course_id
                     inner join exam_record record on plan.id = record.exam_plan_id
                     left join paper p on record.paper_id = p.id
        where relation.teacher_id = #{teacherId,jdbcType=BIGINT}
          and record.release_status_id >= 2
    </select>

    <select id="selectStats" resultType="java.util.Map">
        <![CDATA[
        select count(IF(fact_score / score >= 0.9, 0, null))                             _90,
               count(IF(fact_score / score >= 0.8 and fact_score / score < 0.9, 0, null)) _80,
               count(IF(fact_score / score >= 0.7 and fact_score / score < 0.8, 0, null)) _70,
               count(IF(fact_score / score >= 0.6 and fact_score / score < 0.7, 0, null)) _60,
               count(IF(fact_score / score < 0.6, 0, null))                                  _00,
               count(*)                                  _all
        from exam_record record
                     left join paper p on record.paper_id = p.id ]]>
        where record.exam_plan_id = #{planId,jdbcType=BIGINT}
    </select>
</mapper>